Not easily searchable / non-obvious terms are defined below.  

learning
objectivist
constructivist
constructionist
instructivist
behavioral
cognitive
goal orientation
experiential value
didactic
facilitative
flexibility of program
errorless learning
learning from experience
intrinsic motivation
extrinsic motivation
multifaceted
learner control
mathemagenic environment
generative environment
cooperative learning
cultural sensitivity

visibility
mappings
affordances
constraints
conceptual model
learned helplessness
taught helplessness
gulf of execuition
gulf evaluation
slips and errors
creeping featurism
design-user-system model

embedded cognition
situated cognition
radical constructivists
social constructivists
sociocultural theory
scaffolding
inquiry
demand-pull vs supply push learning
processes
methodologically individualist / reductionist
supervenience
social learning theory
ethnography
cognitive modeling
analogical mapping
generalization
cognitive load
metacognition
cognitive apprentice
tacit knowledge 
self-directed 
self-regulated
declarative knowledge
procedural knowledge
prior knowledge
knowledge organization
course climate
goal orientation
apprpriate challenge
connected learning
emotions

badges
productictive inquiry
clicker
scholarship forums 
game-based learning
massive multiplyer RPG (role playing games)
remix culture
tinkering
open source social capital
pro-amateur sites
long tail in education (demand-pull)
connected learning environment
peer supported
interest powered
academically oriented

sensemaking:
scaffolding design framework
- bridge learniner understanding 
    - visual conceptual organizers
    - descriptors
    - expert guidance
- sepantics of discipline
    - disciplinary strategies explicit in interaction
    - disciplinary strategies explicit in artifacts learners create
- representations inspectable in different ways
    - inspect to reveal underlying data
    - malleable represetnations
process management:
- structure for complex tasks and functionality 
    - boundaries
    - ordered and unordered task decompositions
    - constrain activities
- embed expert guidance
    - clarify charactersitcs 
    - indicate rationales for scientific practices
- auto handle nonsalient tasks
    - nonsalient portions
    - organization of work products
    - navigation amongst tools / activities
articulation and reflections:
- ongoing articulation / reflection
    - planning reminders
    - monitoring reminders
    - sensemaking articulation reminders
    - epistemic features of scientific practices and products reminders
        - how products relate to theory
self-explanation
self-awareness
self-monitoring
self-efficacy
growth mindset
planning
process monitoring
comprehension monitoring
relfection on cognition
"coding" (activity codes)
reinterpreting (problem statements)
strucutral granularity <=> computation level (regulation)
mental model
cognitive model
cognitive support
programming plans
beacons
rules of programmming
top-down comprehension - hypothesis, DFS
bottom up comprehension - syntactic - chunk groups - semantic
program model
situational model
systemic vs as-needed code comprehension
inquiry
delocalized plans
integrated metamodel
knolwedge base
browsing support
searching
multiple views
context-driven views
additional cognitive support
Biggerstaff concept assignment problem
Singer & Lethbridge just-in-time comprehension of source code
extraction tools
analysis tools
presentation tools 
program comprehension
Hawthorne effect
instrumented data
cognitive suppport - Walenstein
Green's Cognitive Dimensions
mix n' match tools - plug into same framework
adaptive intervfaces
model driven visualization

learning from materials (Gears, Logo, Legos, Erector)
concrete thinking
formal thinking - i.e. combinatorial thinking, where one has to reason in terms of the set of all possible states of a system, and self-referential thinking about thinking itself
epistemologist - person who studies knowledge, how it came about, and its justification
children as epistemologists
conservationist view of the world
dissociated learning
Pigetian learning
Mathetic - knowledge about learning, mathetics to learning as heuristics to problem solving
Appropriable - personalizable learning
continuity principle - mathematics to personal life
power principle - empower learner to accomplish things
priniciple of cultural resonance - be accepted by the community
synotic learning - turtle is body synotic with child
Polya's General Methods for Problem Solving (Process)
Formalism of Calculus - Turtle's Circle program - Differential Equation
Relational / Affective
Cultural Syntonicity - navigating the world like the turtle
Verbalizable versus non-Verbalizable knowledge
structured programming
resistance (to debugging, subfeaturizing)
Velocity and Acceleration Turtles for Newton's 3rd Law (monkey and rope problem)
Bourbaki Mother Structures - mapping between mathematics concepts in geo, algebra with affordances of the mind
Graduated Length Method - in skiing

appropriability
evocativeness
integration - affords representing multiple concepts
situational learning
appprentice learning
ISDP - instructional software design project
personalization (remembering students actually acting out fd 100 in elementary school)
linear vs modular programming
disconnection of knowledge (knowledge starts off as knowledge in parts)
time frame and rhythms of work (not all non-concentrated work time is bad, chatting and relaxing is important for creative work)
metacognitive awareness
cognitive flexibility
control distractions and anxiety
continual evaluation
monitor solution processes, articulation
relationship with concepts (willingness to take risks, etc)
generating one's own explanations for a concept
dynamic communication - defining and redefining - intereaction between software producer and medium
representations vs algorithms
social goals and purpose driven exercise
structural definition of microworld
functional definition of microworld
internal vs external notations
learning dynamic - comparing expectations with findings
naturally self-correcting microworld
Microworlds for physics / dynamics, thermodynamics / gas particles (Uri's), Euclidean Space (Blocks), motion / velocity, economics (Smithstown)
intrinsic environment - students given working model, mathematics learned intrinsic to the model, feedback is direct, rich env for exploration and the more math they apply the more they can do
microworld - computational objects, mutliple representations, combinations for complex objects, set of activities => learners manipulate objects, interpret feedback, solve challenges
experimental-feedback cycle - where learning happens from functional perspective
objectivism
ideal symbol systems (follow an objectivist approach)
transparency of system - carried through examples and experience in the case of computer models (social contexts, transfer to situations)

computer, subject, learning strategy overlap - integration of subjects makes it easier to learn
project HeadLight - introduce to computers into the school 2/3 engaged in doing Logo, ISDP - one particular in it which was Harel's thesis
constructionist -- overall experiences, curriculum, software
cluster effects - students affect each other, hierarchy linear modeling
low threshold high ceiling tools
Platonism
The unreasonable effectiveness of mathematics in the natural sciences
situatedness - more connected to culture and society - math - microworld - measuring-in-kitchen

programming knowledge structures
- microstructure level understanding - text level
- macrostructure level understanding - program flow level
goal hierarchy abstraction - higher level goals and more specific goals of a program
data flow abstraction
control flow abstraction - sequence of program actions



To Do: 
- scan rale-proj papers for CS Education terms
- scan explicit-metacog and role-of-self-reg papers for terms
- scan terms for which need defs or not (perhaps add bolds around terms but not defs, use sublime to do this)

Based on CS Education related courses (LRN_SCI 301, 426) from: 
sesp.northwestern.edu/learning-sciences/course-schedule-2018-2019.html 
- Including all papers read in those classes 

And literature on program comprehension: 
- All papers listed in https://medium.com/@learningdollars/15-tools-that-help-learners-make-sense-of-professional-source-code-71767ac8036e
- A Scaffolding Design Framework for Software to Support Science Inquiry - Quintana et. al.
- Theories, Methods and Tools in Program Comprehension: Past, Present and Future - Storey
- Explicitly Teaching Metacognitive and Self-Regulation Skills in Computing - Loksa
- The Role of Self-Regulation in Programming Problem Solving Process and Success - Loksa and Ko
- Online Python Tutor: Embeddable Web-Based Program Visualization for CS Education - Phillip Guo
- Automatic Data Visualization for Novice Pascal Programmers Brad Myers
